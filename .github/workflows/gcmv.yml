name: Generic CM Verifier

on:
  push:
    paths-ignore:
      - 'CS107/**.cpp'
      - 'CS105b/**.cpp'
      - '.github/**'

jobs:
  check-cmsg:
    name: Check commit message
    runs-on: ubuntu-latest
    timeout-minutes: 1
    
    steps:
      - name: ‚Üß Checkout
        uses: actions/checkout@v3
        
      - name: üí¨ Get commit message
        uses: rlespinasse/git-commit-data-action@v1
      
      - name: üóí Get commit message log
        run: git log -1 > cmsg.txt
        
      - name: üîé Regex check 1
        id: regex-1
        uses: AsasInnab/regex-action@v1
        with:
          regex_pattern: '\[(add|del|mod|rft)\]'
          regex_flags: 'g'
          search_string: '${{ env.GIT_COMMIT_MESSAGE_SUBJECT }}'
        
      - name: üîé Regex check 2
        id: regex-2
        if: steps.regex-1.outputs.first_match == ''
        uses: AsasInnab/regex-action@v1
        with:
          regex_pattern: '\[(rnm|mov|mrg)\](?=\ .*\>\ .*)'
          regex_flags: 'g'
          search_string: '${{ env.GIT_COMMIT_MESSAGE_SUBJECT }}'
          
      - name: ‚úè Prepare issue body
        id: issue-body-reg
        if: steps.regex-1.outputs.first_match == '' && steps.regex-2.outputs.first_match == ''
        run: head -5 cmsg.txt > issue.txt

      - name: ‚úç Create new issue (regex)
        id: issuer-reg
        if: steps.issue-body-reg.outcome == 'success'
        uses: peter-evans/create-issue-from-file@v3
        with:
          title: "GCMV - Regex: ${{ env.GIT_COMMIT_MESSAGE_SUBJECT }} | ${{ env.GIT_COMMIT_SHORT_SHA }}"
          content-filepath: issue.txt
          labels: cm-reg
          
      - name: ‚õî Failed regex check
        if: steps.issuer-reg.outcome == 'success'
        run: exit 1