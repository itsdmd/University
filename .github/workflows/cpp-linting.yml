name: C++ Linter

on:
  push:
    paths: "**.cpp"

jobs:
  linter:
    name: ☑ Linter
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
      - name: ↧ Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: ⚙️ Install cppcheck
        if: steps.cache-cmake.outputs.cache-hit != 'true'
        run: sudo apt install cppcheck
        
      - name: 🗒 Get changed files
        id: targets
        uses: tj-actions/changed-files@v17.3
        with:
          files: |
            **/*.cpp
          
      - name: 🔎 Linting
        id: linter
        if: ${{ steps.targets.outputs.any_changed }}
        continue-on-error: true
        run: |
          for changed_file in ${{ steps.targets.outputs.all_changed_files }}; do
            cppcheck --enable=all --inconclusive --library=posix --std=c++20 --error-exitcode=1 --output-file="lint.txt" "${changed_file}"
          done
        
      - name: ✏ Create new issue
        if: steps.linter.outcome == 'failure'
        uses: peter-evans/create-issue-from-file@v3
        with:
          title: "Linting error: ${{ env.GIT_COMMIT_MESSAGE_SUBJECT }} (${{ env.GIT_COMMIT_SHORT_SHA }})"
          content-filepath: lint.txt
          labels: lint
          
      - name: ❌ Make job fail
        if: steps.linter.outcome == 'failure'
        run: exit 1